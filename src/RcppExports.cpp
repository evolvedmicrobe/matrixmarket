// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// readMMcpp
List readMMcpp(std::string fname);
RcppExport SEXP _matrixmarket_readMMcpp(SEXP fnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fname(fnameSEXP);
    rcpp_result_gen = Rcpp::wrap(readMMcpp(fname));
    return rcpp_result_gen;
END_RCPP
}
// readMMcpp2
List readMMcpp2(std::string fname);
RcppExport SEXP _matrixmarket_readMMcpp2(SEXP fnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fname(fnameSEXP);
    rcpp_result_gen = Rcpp::wrap(readMMcpp2(fname));
    return rcpp_result_gen;
END_RCPP
}
// readMMcpp3
List readMMcpp3(std::string fname);
RcppExport SEXP _matrixmarket_readMMcpp3(SEXP fnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fname(fnameSEXP);
    rcpp_result_gen = Rcpp::wrap(readMMcpp3(fname));
    return rcpp_result_gen;
END_RCPP
}
// readMMcpp4
List readMMcpp4(std::string fname);
RcppExport SEXP _matrixmarket_readMMcpp4(SEXP fnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fname(fnameSEXP);
    rcpp_result_gen = Rcpp::wrap(readMMcpp4(fname));
    return rcpp_result_gen;
END_RCPP
}
// readMMcpp5
List readMMcpp5(std::string fname);
RcppExport SEXP _matrixmarket_readMMcpp5(SEXP fnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fname(fnameSEXP);
    rcpp_result_gen = Rcpp::wrap(readMMcpp5(fname));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_matrixmarket_readMMcpp", (DL_FUNC) &_matrixmarket_readMMcpp, 1},
    {"_matrixmarket_readMMcpp2", (DL_FUNC) &_matrixmarket_readMMcpp2, 1},
    {"_matrixmarket_readMMcpp3", (DL_FUNC) &_matrixmarket_readMMcpp3, 1},
    {"_matrixmarket_readMMcpp4", (DL_FUNC) &_matrixmarket_readMMcpp4, 1},
    {"_matrixmarket_readMMcpp5", (DL_FUNC) &_matrixmarket_readMMcpp5, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_matrixmarket(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
